{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst API_BASE = 'http://localhost:5000'; // back dev server\n\nexport function useLogInLogic() {\n  _s();\n  const [emailError, setEmailError] = useState(false);\n  const [emailErrorMessage, setEmailErrorMessage] = useState('');\n  const [passwordError, setPasswordError] = useState(false);\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\n  const validateInputs = () => {\n    const email = document.getElementById('email');\n    const password = document.getElementById('password');\n    let isValid = true;\n    const e = ((email === null || email === void 0 ? void 0 : email.value) || '').trim();\n    const p = ((password === null || password === void 0 ? void 0 : password.value) || '').trim();\n    if (!e || !/\\S+@\\S+\\.\\S+/.test(e)) {\n      setEmailError(true);\n      setEmailErrorMessage('Inserisci una email valida.');\n      isValid = false;\n    } else {\n      setEmailError(false);\n      setEmailErrorMessage('');\n    }\n    if (!p || p.length < 6) {\n      setPasswordError(true);\n      setPasswordErrorMessage('La password deve avere almeno 6 caratteri.');\n      isValid = false;\n    } else {\n      setPasswordError(false);\n      setPasswordErrorMessage('');\n    }\n    return isValid;\n  };\n  const postJson = async (url, body) => {\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    let payload = {};\n    try {\n      payload = await res.json();\n    } catch {}\n    if (!res.ok) {\n      var _payload, _payload2;\n      const msg = ((_payload = payload) === null || _payload === void 0 ? void 0 : _payload.error) || ((_payload2 = payload) === null || _payload2 === void 0 ? void 0 : _payload2.message) || 'Errore';\n      const err = new Error(msg);\n      err.status = res.status;\n      throw err;\n    }\n    return payload;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!validateInputs()) return;\n    const data = new FormData(event.currentTarget);\n    const email = (data.get('email') || '').toString().trim();\n    const password = (data.get('password') || '').toString().trim();\n    try {\n      const mg = await postJson(`${API_BASE}/api/manager/login`, {\n        email,\n        password\n      });\n      localStorage.setItem('token', mg.token);\n      localStorage.setItem('role', 'manager');\n      window.location.assign('/dashboard');\n      return;\n    } catch (err) {\n      if ((err === null || err === void 0 ? void 0 : err.status) === 401) {\n        setPasswordError(true);\n        setPasswordErrorMessage('Credenziali manager non valide.');\n      }\n    }\n    try {\n      const rd = await postJson(`${API_BASE}/api/rider/login`, {\n        email,\n        password\n      });\n      localStorage.setItem('token', rd.token);\n      localStorage.setItem('role', 'rider');\n      // window.location.assign('/rider'); // mo che avremo la pagina del rider\n    } catch (err) {\n      setPasswordError(true);\n      setPasswordErrorMessage('Credenziali non valide.');\n    }\n  };\n  return {\n    emailError,\n    emailErrorMessage,\n    passwordError,\n    passwordErrorMessage,\n    validateInputs,\n    handleSubmit\n  };\n}\n_s(useLogInLogic, \"8lALrhpE+iB6bgXUiVde/c8yUN4=\");","map":{"version":3,"names":["useState","API_BASE","useLogInLogic","_s","emailError","setEmailError","emailErrorMessage","setEmailErrorMessage","passwordError","setPasswordError","passwordErrorMessage","setPasswordErrorMessage","validateInputs","email","document","getElementById","password","isValid","e","value","trim","p","test","length","postJson","url","body","res","fetch","method","headers","JSON","stringify","payload","json","ok","_payload","_payload2","msg","error","message","err","Error","status","handleSubmit","event","preventDefault","data","FormData","currentTarget","get","toString","mg","localStorage","setItem","token","window","location","assign","rd"],"sources":["C:/Users/domen/OneDrive/Documenti/GitHub/DelivEat/deliveat/src/Components/GestionePersonale/LogInLogic.jsx"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst API_BASE = 'http://localhost:5000'; // back dev server\r\n\r\nexport function useLogInLogic() {\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [emailErrorMessage, setEmailErrorMessage] = useState('');\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\r\n\r\n  const validateInputs = () => {\r\n    const email = document.getElementById('email');\r\n    const password = document.getElementById('password');\r\n    let isValid = true;\r\n\r\n    const e = (email?.value || '').trim();\r\n    const p = (password?.value || '').trim();\r\n\r\n    if (!e || !/\\S+@\\S+\\.\\S+/.test(e)) {\r\n      setEmailError(true);\r\n      setEmailErrorMessage('Inserisci una email valida.');\r\n      isValid = false;\r\n    } else {\r\n      setEmailError(false);\r\n      setEmailErrorMessage('');\r\n    }\r\n\r\n    if (!p || p.length < 6) {\r\n      setPasswordError(true);\r\n      setPasswordErrorMessage('La password deve avere almeno 6 caratteri.');\r\n      isValid = false;\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMessage('');\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const postJson = async (url, body) => {\r\n    const res = await fetch(url, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(body),\r\n    });\r\n    let payload = {};\r\n    try { payload = await res.json(); } catch {}\r\n    if (!res.ok) {\r\n      const msg = payload?.error || payload?.message || 'Errore';\r\n      const err = new Error(msg);\r\n      err.status = res.status;\r\n      throw err;\r\n    }\r\n    return payload;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!validateInputs()) return;\r\n\r\n    const data = new FormData(event.currentTarget);\r\n    const email = (data.get('email') || '').toString().trim();\r\n    const password = (data.get('password') || '').toString().trim();\r\n\r\n    try {\r\n      const mg = await postJson(`${API_BASE}/api/manager/login`, { email, password });\r\n      localStorage.setItem('token', mg.token);\r\n      localStorage.setItem('role', 'manager');\r\n      window.location.assign('/dashboard'); \r\n      return;\r\n    } catch (err) {\r\n      if (err?.status === 401) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage('Credenziali manager non valide.');\r\n      }\r\n    }\r\n\r\n    try {\r\n      const rd = await postJson(`${API_BASE}/api/rider/login`, { email, password });\r\n      localStorage.setItem('token', rd.token);\r\n      localStorage.setItem('role', 'rider');\r\n      // window.location.assign('/rider'); // mo che avremo la pagina del rider\r\n    } catch (err) {\r\n      setPasswordError(true);\r\n      setPasswordErrorMessage('Credenziali non valide.');\r\n    }\r\n  };\r\n\r\n  return {\r\n    emailError, emailErrorMessage,\r\n    passwordError, passwordErrorMessage,\r\n    validateInputs,\r\n    handleSubmit\r\n  };\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,QAAQ,GAAG,uBAAuB,CAAC,CAAC;;AAE1C,OAAO,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACM,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACU,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpE,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;IAC9C,MAAMC,QAAQ,GAAGF,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;IACpD,IAAIE,OAAO,GAAG,IAAI;IAElB,MAAMC,CAAC,GAAG,CAAC,CAAAL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEM,KAAK,KAAI,EAAE,EAAEC,IAAI,CAAC,CAAC;IACrC,MAAMC,CAAC,GAAG,CAAC,CAAAL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,KAAK,KAAI,EAAE,EAAEC,IAAI,CAAC,CAAC;IAExC,IAAI,CAACF,CAAC,IAAI,CAAC,cAAc,CAACI,IAAI,CAACJ,CAAC,CAAC,EAAE;MACjCb,aAAa,CAAC,IAAI,CAAC;MACnBE,oBAAoB,CAAC,6BAA6B,CAAC;MACnDU,OAAO,GAAG,KAAK;IACjB,CAAC,MAAM;MACLZ,aAAa,CAAC,KAAK,CAAC;MACpBE,oBAAoB,CAAC,EAAE,CAAC;IAC1B;IAEA,IAAI,CAACc,CAAC,IAAIA,CAAC,CAACE,MAAM,GAAG,CAAC,EAAE;MACtBd,gBAAgB,CAAC,IAAI,CAAC;MACtBE,uBAAuB,CAAC,4CAA4C,CAAC;MACrEM,OAAO,GAAG,KAAK;IACjB,CAAC,MAAM;MACLR,gBAAgB,CAAC,KAAK,CAAC;MACvBE,uBAAuB,CAAC,EAAE,CAAC;IAC7B;IAEA,OAAOM,OAAO;EAChB,CAAC;EAED,MAAMO,QAAQ,GAAG,MAAAA,CAAOC,GAAG,EAAEC,IAAI,KAAK;IACpC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;MAC3BI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI;IAC3B,CAAC,CAAC;IACF,IAAIO,OAAO,GAAG,CAAC,CAAC;IAChB,IAAI;MAAEA,OAAO,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;IAAE,CAAC,CAAC,MAAM,CAAC;IAC3C,IAAI,CAACP,GAAG,CAACQ,EAAE,EAAE;MAAA,IAAAC,QAAA,EAAAC,SAAA;MACX,MAAMC,GAAG,GAAG,EAAAF,QAAA,GAAAH,OAAO,cAAAG,QAAA,uBAAPA,QAAA,CAASG,KAAK,OAAAF,SAAA,GAAIJ,OAAO,cAAAI,SAAA,uBAAPA,SAAA,CAASG,OAAO,KAAI,QAAQ;MAC1D,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAACJ,GAAG,CAAC;MAC1BG,GAAG,CAACE,MAAM,GAAGhB,GAAG,CAACgB,MAAM;MACvB,MAAMF,GAAG;IACX;IACA,OAAOR,OAAO;EAChB,CAAC;EAED,MAAMW,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI,CAAClC,cAAc,CAAC,CAAC,EAAE;IAEvB,MAAMmC,IAAI,GAAG,IAAIC,QAAQ,CAACH,KAAK,CAACI,aAAa,CAAC;IAC9C,MAAMpC,KAAK,GAAG,CAACkC,IAAI,CAACG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAEC,QAAQ,CAAC,CAAC,CAAC/B,IAAI,CAAC,CAAC;IACzD,MAAMJ,QAAQ,GAAG,CAAC+B,IAAI,CAACG,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,EAAEC,QAAQ,CAAC,CAAC,CAAC/B,IAAI,CAAC,CAAC;IAE/D,IAAI;MACF,MAAMgC,EAAE,GAAG,MAAM5B,QAAQ,CAAC,GAAGvB,QAAQ,oBAAoB,EAAE;QAAEY,KAAK;QAAEG;MAAS,CAAC,CAAC;MAC/EqC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,EAAE,CAACG,KAAK,CAAC;MACvCF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC;MACvCE,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,YAAY,CAAC;MACpC;IACF,CAAC,CAAC,OAAOjB,GAAG,EAAE;MACZ,IAAI,CAAAA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEE,MAAM,MAAK,GAAG,EAAE;QACvBlC,gBAAgB,CAAC,IAAI,CAAC;QACtBE,uBAAuB,CAAC,iCAAiC,CAAC;MAC5D;IACF;IAEA,IAAI;MACF,MAAMgD,EAAE,GAAG,MAAMnC,QAAQ,CAAC,GAAGvB,QAAQ,kBAAkB,EAAE;QAAEY,KAAK;QAAEG;MAAS,CAAC,CAAC;MAC7EqC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEK,EAAE,CAACJ,KAAK,CAAC;MACvCF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;MACrC;IACF,CAAC,CAAC,OAAOb,GAAG,EAAE;MACZhC,gBAAgB,CAAC,IAAI,CAAC;MACtBE,uBAAuB,CAAC,yBAAyB,CAAC;IACpD;EACF,CAAC;EAED,OAAO;IACLP,UAAU;IAAEE,iBAAiB;IAC7BE,aAAa;IAAEE,oBAAoB;IACnCE,cAAc;IACdgC;EACF,CAAC;AACH;AAACzC,EAAA,CA1FeD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}