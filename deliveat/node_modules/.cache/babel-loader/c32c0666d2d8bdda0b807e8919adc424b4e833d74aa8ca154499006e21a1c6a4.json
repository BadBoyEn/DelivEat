{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\domen\\\\OneDrive\\\\Documenti\\\\GitHub\\\\DelivEat\\\\deliveat\\\\src\\\\theme\\\\AppTheme.jsx\",\n  _s = $RefreshSig$();\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useState, useMemo, createContext, useEffect } from 'react';\nimport './Dark.css';\nimport './Light.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ColorModeContext = /*#__PURE__*/createContext({\n  toggleColorMode: () => {}\n});\nexport default function AppTheme({\n  children\n}) {\n  _s();\n  // Inizializza dal localStorage o dal prefers-color-scheme\n  const getInitial = () => {\n    const saved = typeof window !== 'undefined' ? localStorage.getItem('color-mode') : null;\n    if (saved === 'light' || saved === 'dark') return saved;\n    const prefersDark = typeof window !== 'undefined' && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n    return prefersDark ? 'dark' : 'light';\n  };\n  const [mode, setMode] = useState(getInitial);\n  const colorMode = useMemo(() => ({\n    toggleColorMode: maybeMode => {\n      setMode(prev => {\n        const next = typeof maybeMode === 'string' ? maybeMode : prev === 'light' ? 'dark' : 'light';\n        if (typeof window !== 'undefined') {\n          localStorage.setItem('color-mode', next);\n        }\n        return next;\n      });\n    }\n  }), []);\n  const theme = useMemo(() => createTheme({\n    palette: {\n      mode,\n      primary: {\n        main: mode === 'dark' ? '#90caf9' : '#1976d2'\n      },\n      secondary: {\n        main: mode === 'dark' ? '#f48fb1' : '#d81b60'\n      },\n      background: {\n        default: mode === 'dark' ? '#121212' : '#ffffff',\n        paper: mode === 'dark' ? '#1e1e1e' : '#f5f5f5'\n      },\n      text: {\n        primary: mode === 'dark' ? '#ffffff' : '#000000'\n      }\n    }\n  }), [mode]);\n  useEffect(() => {\n    document.documentElement.classList.remove('theme-dark', 'theme-light');\n    document.documentElement.classList.add(`theme-${mode}`);\n  }, [mode]);\n  return /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n    value: colorMode,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(AppTheme, \"bvGtxaJ+8lzJJHURCWzf+3fb2A8=\");\n_c = AppTheme;\nvar _c;\n$RefreshReg$(_c, \"AppTheme\");","map":{"version":3,"names":["createTheme","ThemeProvider","useState","useMemo","createContext","useEffect","jsxDEV","_jsxDEV","ColorModeContext","toggleColorMode","AppTheme","children","_s","getInitial","saved","window","localStorage","getItem","prefersDark","matchMedia","matches","mode","setMode","colorMode","maybeMode","prev","next","setItem","theme","palette","primary","main","secondary","background","default","paper","text","document","documentElement","classList","remove","add","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/domen/OneDrive/Documenti/GitHub/DelivEat/deliveat/src/theme/AppTheme.jsx"],"sourcesContent":["import { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useState, useMemo, createContext, useEffect } from 'react';\r\n\r\nimport './Dark.css';\r\nimport './Light.css';\r\n\r\nexport const ColorModeContext = createContext({\r\n  toggleColorMode: () => {},\r\n});\r\n\r\nexport default function AppTheme({ children }) {\r\n  // Inizializza dal localStorage o dal prefers-color-scheme\r\n  const getInitial = () => {\r\n    const saved =\r\n      typeof window !== 'undefined' ? localStorage.getItem('color-mode') : null;\r\n    if (saved === 'light' || saved === 'dark') return saved;\r\n\r\n    const prefersDark =\r\n      typeof window !== 'undefined' &&\r\n      window.matchMedia &&\r\n      window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n\r\n    return prefersDark ? 'dark' : 'light';\r\n  };\r\n\r\n  const [mode, setMode] = useState(getInitial);\r\n\r\n  const colorMode = useMemo(\r\n    () => ({\r\n      toggleColorMode: (maybeMode) => {\r\n        setMode((prev) => {\r\n          const next =\r\n            typeof maybeMode === 'string'\r\n              ? maybeMode\r\n              : prev === 'light'\r\n              ? 'dark'\r\n              : 'light';\r\n\r\n          if (typeof window !== 'undefined') {\r\n            localStorage.setItem('color-mode', next);\r\n          }\r\n          return next;\r\n        });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const theme = useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode,\r\n          primary: {\r\n            main: mode === 'dark' ? '#90caf9' : '#1976d2',\r\n          },\r\n          secondary: {\r\n            main: mode === 'dark' ? '#f48fb1' : '#d81b60',\r\n          },\r\n          background: {\r\n            default: mode === 'dark' ? '#121212' : '#ffffff',\r\n            paper: mode === 'dark' ? '#1e1e1e' : '#f5f5f5',\r\n          },\r\n          text: {\r\n            primary: mode === 'dark' ? '#ffffff' : '#000000',\r\n          },\r\n        },\r\n      }),\r\n    [mode]\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.documentElement.classList.remove('theme-dark', 'theme-light');\r\n    document.documentElement.classList.add(`theme-${mode}`);\r\n  }, [mode]);\r\n\r\n  return (\r\n    <ColorModeContext.Provider value={colorMode}>\r\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,SAASC,QAAQ,EAAEC,OAAO,EAAEC,aAAa,EAAEC,SAAS,QAAQ,OAAO;AAEnE,OAAO,YAAY;AACnB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,OAAO,MAAMC,gBAAgB,gBAAGJ,aAAa,CAAC;EAC5CK,eAAe,EAAEA,CAAA,KAAM,CAAC;AAC1B,CAAC,CAAC;AAEF,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7C;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,KAAK,GACT,OAAOC,MAAM,KAAK,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAG,IAAI;IAC3E,IAAIH,KAAK,KAAK,OAAO,IAAIA,KAAK,KAAK,MAAM,EAAE,OAAOA,KAAK;IAEvD,MAAMI,WAAW,GACf,OAAOH,MAAM,KAAK,WAAW,IAC7BA,MAAM,CAACI,UAAU,IACjBJ,MAAM,CAACI,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;IAE3D,OAAOF,WAAW,GAAG,MAAM,GAAG,OAAO;EACvC,CAAC;EAED,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAACW,UAAU,CAAC;EAE5C,MAAMU,SAAS,GAAGpB,OAAO,CACvB,OAAO;IACLM,eAAe,EAAGe,SAAS,IAAK;MAC9BF,OAAO,CAAEG,IAAI,IAAK;QAChB,MAAMC,IAAI,GACR,OAAOF,SAAS,KAAK,QAAQ,GACzBA,SAAS,GACTC,IAAI,KAAK,OAAO,GAChB,MAAM,GACN,OAAO;QAEb,IAAI,OAAOV,MAAM,KAAK,WAAW,EAAE;UACjCC,YAAY,CAACW,OAAO,CAAC,YAAY,EAAED,IAAI,CAAC;QAC1C;QACA,OAAOA,IAAI;MACb,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,EACF,EACF,CAAC;EAED,MAAME,KAAK,GAAGzB,OAAO,CACnB,MACEH,WAAW,CAAC;IACV6B,OAAO,EAAE;MACPR,IAAI;MACJS,OAAO,EAAE;QACPC,IAAI,EAAEV,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG;MACtC,CAAC;MACDW,SAAS,EAAE;QACTD,IAAI,EAAEV,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG;MACtC,CAAC;MACDY,UAAU,EAAE;QACVC,OAAO,EAAEb,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG,SAAS;QAChDc,KAAK,EAAEd,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG;MACvC,CAAC;MACDe,IAAI,EAAE;QACJN,OAAO,EAAET,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG;MACzC;IACF;EACF,CAAC,CAAC,EACJ,CAACA,IAAI,CACP,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdgC,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,EAAE,aAAa,CAAC;IACtEH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,GAAG,CAAC,SAASpB,IAAI,EAAE,CAAC;EACzD,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBACEd,OAAA,CAACC,gBAAgB,CAACkC,QAAQ;IAACC,KAAK,EAAEpB,SAAU;IAAAZ,QAAA,eAC1CJ,OAAA,CAACN,aAAa;MAAC2B,KAAK,EAAEA,KAAM;MAAAjB,QAAA,EAAEA;IAAQ;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEhC;AAACnC,EAAA,CAvEuBF,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}